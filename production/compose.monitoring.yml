configs:
  prometheus_config:
    file: ../monitoring/prometheus/prometheus.yml
  loki_config:
    file: ../monitoring/loki/loki-config.yml
  alloy_config:
    file: ../monitoring/alloy/config.alloy
  grafana_datasources:
    file: ../monitoring/grafana/provisioning/datasources/datasources.yml

services:
  prometheus:
    image: prom/prometheus:v3.4.1
    configs:
      - source: prometheus_config
        target: /etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.retention.time=24h'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--web.enable-remote-write-receiver'
    env_file:
      - .prod.env
    volumes:
      - prometheus_data:/prometheus
    networks:
      - kuerzen-network
      - monitoring
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 1g
        reservations:
          memory: 512m
      restart_policy:
        condition: on-failure

  grafana:
    image: grafana/grafana:12.0.2
    configs:
      - source: grafana_datasources
        target: /etc/grafana/provisioning/datasources/datasources.yml
    env_file:
      - .prod.env
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - monitoring
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 512m
        reservations:
          memory: 256m
      restart_policy:
        condition: on-failure

  loki:
    image: grafana/loki:3.5
    configs:
      - source: loki_config
        target: /etc/loki/config.yml
    volumes:
      - loki_data:/loki
    networks:
      - monitoring
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 512m
        reservations:
          memory: 256m
      restart_policy:
        condition: on-failure

  alloy:
    image: grafana/alloy:v1.9.0
    configs:
      - source: alloy_config
        target: /etc/alloy/config.alloy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - "run"
      - "/etc/alloy/config.alloy"
    networks:
      - monitoring
    deploy:
      mode: global
      resources:
        limits:
          memory: 256m
        reservations:
          memory: 128m
      restart_policy:
        condition: on-failure

networks:
  kuerzen-network:
    external: true
  monitoring:
    name: kuerzen-monitoring
    driver: overlay
    attachable: true

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  loki_data:
    driver: local
